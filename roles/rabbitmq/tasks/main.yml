# source common.sh

# roboshop_app_password=$1
# if [ -z "${roboshop_app_password}" ]; then
#   echo -e "\e[31mMissing RabbitMQ App User Password argument\e[0m"
#   exit 1
# fi

# print_head "Setup Erlang repos "
# curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | bash  &>>${log_file}
# status_check $?

# print_head "Setup RabbitMQ Repos"
# curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | bash  &>>${log_file}
# status_check $?

# print_head " "
# yum install rabbitmq-server erlang -y  &>>${log_file}
# status_check $?


# print_head "Enable RabbitMQ Service"
# systemctl enable rabbitmq-server  &>>${log_file}
# status_check $?

# print_head "Start RabbitMQ Service"
# systemctl start rabbitmq-server  &>>${log_file}
# status_check $?

# print_head "Add Application User"
# rabbitmqctl list_users | grep roboshop &>>${log_file}
# if [ $? -ne 0 ]; then
#   rabbitmqctl add_user roboshop ${roboshop_app_password} &>>${log_file}
# fi
# status_check $?

# print_head "Configure Permissions for App User"
# rabbitmqctl set_permissions -p / roboshop ".*" ".*" ".*"  &>>${log_file}
# status_check $?

- name: Setup Erlang repos
  ansible.builtin.shell: curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | bash
  
- name: Install rabbitMQ repos 
  ansible.builtin.shell: curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | bash 

- name: Install Erlang & RabbitMQ
  ansible.builtin.yum:
    name:
       - rabbitmq-server 
       - erlang 
    state: installed

- name: Enable rabbitMQ Service
  ansible.builtin.systemd:
   name: rabbitmq-server 
   state: started
   enabled: yes

- name: Add app user
  community.rabbitmq.rabbitmq_user:
    user: "{{ lookup('amazon.aws.aws_ssm', '{{env}}.{{component}}.amqp_user', region='us-east-1') }}"
    password: "{{ lookup('amazon.aws.aws_ssm', '{{env}}.{{component}}.amqp_pass', region='us-east-1') }}"
    vhost: /
    configure_priv: .*
    read_priv: .*
    write_priv: .*
    state: present



